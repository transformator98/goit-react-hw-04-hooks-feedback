{"version":3,"sources":["components/Container/Container.js","components/Feedback/Feedback.js","components/Statistics/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","Feedback","options","onLeaveFeedback","Object","entries","map","key","label","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Section","title","App","useState","setGood","setNeutral","setBad","option","prevState","Math","round","protoType","PropTypes","string","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAMeA,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCDjB,SAASI,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC1C,OACE,mCACGC,OAAOC,QAAQH,GAASI,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YAC3B,wBAAkBC,QAAS,kBAAMN,EAAgBK,IAAjD,SACGA,GADUD,QCJN,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,ICAC,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OAAOD,EAAQ,EACb,qCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,UAGF,cAACP,EAAD,CAAcC,QAAQ,sBClBX,SAASO,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOtB,EAAY,EAAZA,SACvC,OACE,qCACE,6BAAKsB,IACJtB,KCCQ,SAASuB,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEED,mBAAS,GAFX,mBAErBP,EAFqB,KAEZS,EAFY,OAGNF,mBAAS,GAHH,mBAGrBN,EAHqB,KAGhBS,EAHgB,KAwBtBR,EAFGH,EAAOC,EAAUC,EAO1B,OACE,eAAC,EAAD,WACE,cAACG,EAAD,CAASC,MAAM,wBAAf,SACE,cAAClB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7Ba,SAAAsB,GACnB,OAAQA,GACN,IAAK,OACHH,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAoBF,cAACR,EAAD,CAASC,MAAM,aAAf,SACE,cAACP,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAjBCD,EAAQ,EAAIW,KAAKC,MAAOf,EAAOG,EAAS,KAAO,SJnB1Df,EAAS4B,UAAY,CACnB3B,QAAS4B,IAAUC,OACnB5B,gBAAiB2B,IAAUC,Q,MKT7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.a1e74c27.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nexport default function Feedback({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {Object.entries(options).map(([key, label]) => (\n        <button key={key} onClick={() => onLeaveFeedback(label)}>\n          {label}\n        </button>\n      ))}\n    </>\n  );\n}\nFeedback.protoType = {\n  options: PropTypes.string,\n  onLeaveFeedback: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport Notification from './Notification';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return total > 0 ? (\n    <>\n      <p>good: {good}</p>\n      <p>neutral: {neutral}</p>\n      <p>bad: {bad}</p>\n      <p>tota: {total}</p>\n      <p>positive feedback: {positivePercentage}%</p>\n    </>\n  ) : (\n    <Notification message=\"No feedback given\" />\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { useState } from 'react';\nimport Container from './components/Container';\nimport FeedbackOptions from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const total = countTotalFeedback();\n  const countPositiveFeedbackPercentage = () => {\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={leveFeedback}\n        />\n      </Section>\n      <Section title=\"statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__W6kcD\"};"],"sourceRoot":""}